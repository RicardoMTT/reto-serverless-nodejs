# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: tricardo003
# "service" is the name of this project. This will also be added to your AWS resource names.
service: prueba-serverless-node
#region: us-west-2
plugins:
  - serverless-auto-swagger

custom:
  autoswagger:
    title: 'API de Prueba Serverless'
    apiType: 'http'
    generateSwaggerOnDeploy: true
    typefiles: ['./openapi.yml']
    host: "https://wfw96bgzai.execute-api.us-east-1.amazonaws.com"
    basePath: '/'
    swaggerPath: swagger # esto define la ruta donde se servirá la documentación
    schemes:
      - https
   

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:734455697935:table/PeoplesTable
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:734455697935:table/UsersTable
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:734455697935:table/ApiCache

functions:
  getData:
    handler: src/getData.getCharacters
    timeout: 15
    events:
      - httpApi:
          path: /fusionados
          method: get
  saveData:
    handler: src/saveData.saveUser
    timeout: 6
    events:
      - httpApi:
          path: /almacenar
          method: post

  getAllData:
    handler: src/getAllData.getAll
    timeout: 6
    events:
      - httpApi:
          path: /historial
          method: get
  
resources:
  Outputs:
    HttpApiUrl:
      Value: !Join
        - ''
        - - 'https://'
          - Ref: HttpApi # Hace referencia al recurso del API Gateway
          - '.execute-api.'
          - Ref: AWS::Region
          - '.amazonaws.com/'
          - ${self:provider.stage} # Usa el stage configurado en Serverless
      Export:
        Name: "${self:service}-${self:provider.stage}-HttpApiUrl"
        
  Resources:
    PeoplesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PeoplesTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    ApiCache:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ApiCache
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: cacheKey
            AttributeType: S
        KeySchema:
          - AttributeName: cacheKey
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: expiresAt
          Enabled: true

